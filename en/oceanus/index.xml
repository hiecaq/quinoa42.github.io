<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oceanus on Emain Ablach</title>
    <link>https://quinoa42.github.io/en/oceanus/</link>
    <description>Recent content in Oceanus on Emain Ablach</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 09 Jul 2019 00:00:00 +0800</lastBuildDate><atom:link href="https://quinoa42.github.io/en/oceanus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Set up haskell-ide-engine and xmonad</title>
      <link>https://quinoa42.github.io/en/oceanus/hie-and-xmonad/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/hie-and-xmonad/</guid>
      <description>&lt;p&gt;Now that I have tons of time during this break, I decided to &lt;a href=&#34;http://learnyouahaskell.com/&#34;&gt;learn myself a haskell&lt;/a&gt; and as a way to apply what I&amp;rsquo;ve learned, I&amp;rsquo;ve planed to switch from &lt;a href=&#34;https://awesomewm.org&#34;&gt;awesomeWM&lt;/a&gt; to &lt;a href=&#34;https://xmonad.org&#34;&gt;xmonad&lt;/a&gt;. Besides, I&amp;rsquo;ve being troubled with my awesome config&amp;rsquo;s memory leak, which I haven&amp;rsquo;t got the chance to look deeply into, so this might be a good chance to give xmonad a try. However, it spent me a while figuring out how to set the dev environment for xmonad.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Auto-complete user-defined LaTeX packages and classes with Vimtex</title>
      <link>https://quinoa42.github.io/en/oceanus/vimtex-user-defined-completion/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/vimtex-user-defined-completion/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/lervag/vimtex&#34;&gt;vimtex&lt;/a&gt; is one of the most commonly used LaTeX plugin (which is also what I use) in the vim community that supports auto-completion, conceal, synctex pdf preview, and many other modern features. In the last few months after I switched to Linux, the macros I defined in my LaTeX template has grown to such an extent that I have to move them into separate packages and classes. Doing so is &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Creating%5FPackages&#34;&gt;quite easy&lt;/a&gt;, but I got a problem: the commands in my own packages and classes are not in the candidate list of auto-completion!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implement a simple fuzzy app launcher with fzf</title>
      <link>https://quinoa42.github.io/en/oceanus/replace-dmenu-with-fzf/</link>
      <pubDate>Sun, 27 Jan 2019 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/replace-dmenu-with-fzf/</guid>
      <description>&lt;p&gt;One thing that I do really miss after switching from Mac OS to Arch Linux is &lt;a href=&#34;https://www.alfredapp.com/&#34;&gt;Alfred&lt;/a&gt;. I heard there is an alternative for Linux called &lt;a href=&#34;https://github.com/albertlauncher/albert&#34;&gt;Albert&lt;/a&gt; but I haven&amp;rsquo;t tried it out. I mean, on Linux everything related to command line is much easier than on Mac, and I don&amp;rsquo;t feel it really necessary to use an app launcher as complicated as Alfred. However, there are times you do need to access and launch something directly. Considering that the default dmenu doesn&amp;rsquo;t fit my need, I decide to implement a simple fuzzy app launcher with fzf and other tools.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A workaround that handles after directory scripts for optional packages of Vim8</title>
      <link>https://quinoa42.github.io/en/oceanus/vim8-package-opt-after/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/vim8-package-opt-after/</guid>
      <description>&lt;p&gt;Since I started to use Arch Linux, I&amp;rsquo;ve also switched from using plugins such as &lt;a href=&#34;https://github.com/junegunn/vim-plug&#34;&gt;vim-plug&lt;/a&gt; to using the native Vim8 packages utility. However, I encountered the problem where if we do &lt;code&gt;packadd SOMEPACKAGE&lt;/code&gt; after (Neo)vim has initialized, and unfortunately if this plugin comes with an &lt;code&gt;after&lt;/code&gt; directory, for example in an &lt;code&gt;autocmd&lt;/code&gt; such as &lt;code&gt;autocmd FileType python vim-textobj-python&lt;/code&gt;, the plugin will not work correctly due to the way Vim8 packages utility handles &lt;code&gt;after&lt;/code&gt; directories.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Open tridactyl&#39;s external editor in a new tmux window</title>
      <link>https://quinoa42.github.io/en/oceanus/tridactyl-editorcmd-with-tmux/</link>
      <pubDate>Sun, 20 Jan 2019 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/tridactyl-editorcmd-with-tmux/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/tridactyl/tridactyl&#34;&gt;Tridactyl&lt;/a&gt; has been a decent replacement for &lt;a href=&#34;https://github.com/vimperator/vimperator-labs&#34;&gt;Vimperator&lt;/a&gt; or &lt;a href=&#34;https://github.com/5digits/dactyl&#34;&gt;Pentadactyl&lt;/a&gt; for me since I said goodbye to the XUL extensions. It supports the invocation of external editor (I mean Vim, of course) in its own insert mode pretty well, but the default behavior is to open Vim in a new terminal emulator window. Considering that I&amp;rsquo;m using &lt;code&gt;tmux&lt;/code&gt; for most of the time, I start to wondering if I could do some tweak with the &lt;code&gt;editorcmd&lt;/code&gt; so that instead of a new terminal emulator window, a termporary tmux window will be opened.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compile ruby with rbenv and brew-installed tcl-tk</title>
      <link>https://quinoa42.github.io/en/oceanus/ruby-tcl-tk/</link>
      <pubDate>Wed, 22 Nov 2017 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/ruby-tcl-tk/</guid>
      <description>&lt;p&gt;It happens to be the case where I run into the need of using ruby and tk.Anyway, it tooks me a while to figure out how to compile a ruby by using &lt;code&gt;rbenv&lt;/code&gt; and &lt;code&gt;ruby-build&lt;/code&gt; with a brew-installed &lt;code&gt;tcl-tk&lt;/code&gt; library.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Eclim Setup</title>
      <link>https://quinoa42.github.io/en/oceanus/eclim-setup/</link>
      <pubDate>Thu, 12 Oct 2017 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/eclim-setup/</guid>
      <description>&lt;p&gt;Today I come into the situation where I am forced to use Eclipse, one of those huge IDEs that isolate me from the warm terminal world. However, as a user of (neo)vim, nothing can stop me from doing things in a, at least, vim-like environment. At this moment, one tool comes into my mind: &lt;a href=&#34;http://eclim.org/index.html&#34;&gt;Eclim&lt;/a&gt;, which I have been wondering about since the time when I was still using Windows XP back in my high school.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python environment configuration for Neovim</title>
      <link>https://quinoa42.github.io/en/oceanus/neovim-python/</link>
      <pubDate>Fri, 30 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/neovim-python/</guid>
      <description>&lt;p&gt;Today I managed to set up the Python environment for Neovim, which is a little bit tricky, so I decide to write down the problems I overcame so that someone could be helped to configure these easily.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Process Substitution and redirection without command</title>
      <link>https://quinoa42.github.io/en/oceanus/process-substitution-and-redirection-without-command/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/process-substitution-and-redirection-without-command/</guid>
      <description>&lt;p&gt;Today I found an interesting &lt;a href=&#34;https://www.v2ex.com/t/370077&#34;&gt;discussion&lt;/a&gt; about some interesting statements:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;$ &lt;span style=&#34;color:#0aa&#34;&gt;echo&lt;/span&gt; &amp;lt;(&amp;lt;&amp;lt;&amp;lt;&lt;span style=&#34;color:#a50&#34;&gt;&amp;#34;I am a cool here-string&amp;#34;&lt;/span&gt;)
/dev/fd/11
$ cat &amp;lt;(&amp;lt;&amp;lt;&amp;lt;&lt;span style=&#34;color:#a50&#34;&gt;&amp;#34;I am a cool here-string&amp;#34;&lt;/span&gt;)
I am a cool here-string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To understand how this works, we need to split the statements into pieces.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fix display of special characters of tmux under ssh with t flag</title>
      <link>https://quinoa42.github.io/en/oceanus/tmux-force-utf8/</link>
      <pubDate>Sun, 09 Apr 2017 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/tmux-force-utf8/</guid>
      <description>&lt;p&gt;I am used to use tmux on our server via ssh with the simple but elegant command &lt;code&gt;ssh blabla@hostname -t tmux&lt;/code&gt;, but today I suddenly realized that under my tmux all the Unicode special characters doesn&amp;rsquo;t display correctly for some reason. If I remembered correctly they did display without any fault just yesterday, but anyway after a few minutes I found (probably) a solution to this problem.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Terminfo for iterm2 and tmux that support italics, truecolor and fixed ctrl-h</title>
      <link>https://quinoa42.github.io/en/oceanus/terminfo-truecolor/</link>
      <pubDate>Wed, 23 Nov 2016 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/terminfo-truecolor/</guid>
      <description>&lt;p&gt;Everyone likes true color. But the true color support doesn&amp;rsquo;t come out of the box for most terminal emulators, and some of them are just never going to support it. However, for some of them with some simple tweak true color will just simply be available.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Run Foobar2000 in Mac</title>
      <link>https://quinoa42.github.io/en/oceanus/mac-foobar2000/</link>
      <pubDate>Sun, 06 Nov 2016 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/mac-foobar2000/</guid>
      <description>&lt;p&gt;Today I realized that iTunes does not support &lt;code&gt;*.flac&lt;/code&gt; files at all. Stubborn user as I am, &lt;strong&gt;NO ONE&lt;/strong&gt; can force me to get used to their way of doing things. It&amp;rsquo;s okay for iTunes to only support its own format of lossless music, but I just choose to not use it.&lt;/p&gt;
&lt;p&gt;So here is how I tried to get my favorite Foobar2000 to work in osx by using wineskin:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ruby Setup</title>
      <link>https://quinoa42.github.io/en/oceanus/ruby-setup/</link>
      <pubDate>Fri, 28 Oct 2016 00:00:00 +0800</pubDate>
      
      <guid>https://quinoa42.github.io/en/oceanus/ruby-setup/</guid>
      <description>&lt;p&gt;Here I record what I did to install ruby on my macbook.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
